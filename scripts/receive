#!/bin/sh
#
# ancistrus
#
# Netgear's D7000 Nighthawk Router Experience Distributed Project
#
# https://github.com/negan07/ancistrus
#
# License: GPLv2
#
#
# Receive script: prepare debug environment on running router.
#
# Usage: $0 <core> <ko> <qos> <web> <del> <*anyfiledir*>
#
# An http(s), or (s)ftp server must be run on local i386 host.
# On local host i386 machine it must be placed into http(s) or (s)ftp root server dir $DEBUG_DIR .
# On router it must be placed into ramfs $RDIR routerdir.
# https or sftp server must have a valid pem cert: Common Name (CN) must be $ADDR .
# https of sftp pem cert can be created with:
# sudo openssl req -new -x509 -keyout cert.pem -out cert.pem -days 365 -nodes
#
# telnet the router:
# cd $RDIR
# curl -f -s -k -O ${SERVER}://${ADDR}/${THISONE}
# chmod 755 $THISONE
# export LD_LIBRARY_PATH=$DBGDIR
# Files are located in $DBGDIR .
#

NAME=anc
THISONE=receive
SERVER=https								# kind of server: http or ftp
ADDR=192.168.0.7							# local host ip (development pc machine i386)
RDIR=/tmp/etc								# this script location
DBGDIR=$RDIR/${NAME}dbg							# debug dir
LANGDIR=www.eng								# www dir
CGI=$NAME.cgi								# actual cgi name
BINLIST="libscnvram.so $NAME"						# main binary files
KOLIST="sch_fq_codel.ko act_ipt.ko cls_flow.ko sch_hfsc.ko"		# kernel modules
QOSLIST="functions.qos legacy_funcs.qos qdisc_funcs.qos qos_funcs.qos qos-sqm.conf rc_qos"	# qos scripts and configs
SSHLIST="rc_ssh sshd_config sshd ssh-keygen scp"			# openssh bins scripts and configs


DIRMAKE() {								# create the work bindir
mkdir -p -m 0755 $DBGDIR > /dev/null 2>&1
}

THISLNK() {								# create a symlink to this
ln -sf $RDIR/$THISONE $DBGDIR/$THISONE > /dev/null 2>&1
}

GET() {									# www get a file from the $ADDR server
rm -f $1
curl -f -s -k -O ${SERVER}://${ADDR}/${1} > /dev/null 2>&1
	if [ $? -ne 0 ]; then
	echo "$1 not found"
	else
	chmod 755 $1 > /dev/null 2>&1
	fi
}

GETLIST() {								# www get list of files from the $ADDR server to $DBGDIR dir
DIRMAKE
cd $DBGDIR
	for I in $*
	do
	GET $I
	done
THISLNK
}

[ $# -ne "1" ] && echo "Usage: $0 <core> <ko> <qos> <ssh> <web> <del> <*anyfiledir*>" && exit 1

export LD_LIBRARY_PATH=$DBGDIR
ln -sf /usr/sbin/rc $DBGDIR/rc > /dev/null 2>&1
ln -sf /usr/sbin/rc_app/rc_apps $DBGDIR/rc_apps > /dev/null 2>&1

	case $1 in
	core)
	GETLIST $BINLIST
	;;
	ko)
	GETLIST $KOLIST
	;;
	qos)
	GETLIST $QOSLIST
	;;
	ssh)
	GETLIST $SSHLIST
	mv -f ${DBGDIR}/sshd_config ${RDIR}
	;;
	web)
	DIRMAKE
	cd $DBGDIR
	rm -rf ${DBGDIR}/${LANGDIR}
	GET ${LANGDIR}.zip
	unzip ${LANGDIR}.zip
	rm -f ${LANGDIR}.zip
	chmod -R 755 $LANGDIR
	ln -sf ${DBGDIR}/${CGI} ${RDIR}/${CGI} > /dev/null 2>&1
	GETLIST $BINLIST
	;;
	del)
	cd $RDIR
	rm -rf $DBGDIR /var/ssh
	;;
	*)
	DIRMAKE
	cd $DBGDIR
	GET $1
	FILEABS=`echo "$1" | grep ".zip"`
	[ "${FILEABS}" = "$1" ] && unzip $1 && rm -f $1 && chmod -R 755 $FILEABS > /dev/null 2>&1
	THISLNK
	;;
	esac
exit 0
