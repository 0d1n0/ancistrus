diff -urN D7000_V1.0.1.44_WW_src/Source/apps/nvram/nvram.c D7000_V1.0.1.44_WW_src/Source/apps/nvram/nvram.c
--- D7000_V1.0.1.44_WW_src/Source/apps/nvram/nvram.c	2016-10-11 17:53:07.000000000 +0200
+++ D7000_V1.0.1.44_WW_src/Source/apps/nvram/nvram.c	2017-01-23 23:31:44.988992207 +0100
@@ -168,14 +168,12 @@
 	unsigned long crc;
 	int fd1 = -1;
 	char *data = NULL;
-	int err = 0;
 
 	nvram_header_t header;
 
 	fd1=open(NVRAM_PATH,O_RDONLY);
 	if(fd1<0) {
-		err = NVRAM_FLASH_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_FLASH_ERR;
 	}
 	read(fd1, &header,sizeof(nvram_header_t));
 
@@ -183,8 +181,7 @@
 	lseek(fd1,NVRAM_HEADER_SIZE,0);
 	if(header.magic!=NVRAM_MAGIC)
 	{
-		err = NVRAM_MAGIC_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_MAGIC_ERR;
 	}
 
 	data=malloc(header.len+1);
@@ -197,8 +194,7 @@
 		printf("CRC Error!!\n");
 		printf("header.crc=%lx\tcrc=%lx\n",header.crc,crc);
 #endif	
-		err  = NVRAM_CRC_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_CRC_ERR;
 	}
 
 	writeFileBin_unlock(NVRAM_TMP_PATH, data, header.len);
@@ -207,13 +203,6 @@
 	close(fd1);	
 
 	return NVRAM_SUCCESS;
-
-_err_out:
-	if (data)
-		free(data);
-	if (fd1 >= 0)
-		close(fd1);
-	return err;
 }
 
 int nvram_load(void)
@@ -235,13 +224,11 @@
 	int fd1 = -1;
 	char *data = NULL;
 	int len;
-	int err = 0;
 
 	nvram_header_t header;
 	
 	if((len=readFileBin_unlock(NVRAM_TMP_PATH, &data))<=0) {
-		err =  NVRAM_SHADOW_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_SHADOW_ERR;
 	}
 
 	header.magic=NVRAM_MAGIC;
@@ -249,8 +236,7 @@
 	header.len=len;
 
 	if((fd1=open(NVRAM_PATH,O_WRONLY | O_CREAT))<0) {
-		err =  NVRAM_FLASH_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_FLASH_ERR;
 	}
 	write(fd1, &header,sizeof(nvram_header_t));
 	lseek(fd1,NVRAM_HEADER_SIZE,0);
@@ -260,24 +246,17 @@
 	lseek(fd1,NVRAM_HEADER_SIZE,0);
 	read(fd1, data,len);
 	if(header.crc!=crc32(data, len)){
-		err = NVRAM_FLASH_ERR;
-		goto _err_out;
+	if(data) {free(data);} if(fd1 >= 0) {close(fd1);} return NVRAM_FLASH_ERR;
 	}			
 
 	close(fd1);
 	free(data);
 
+#ifdef TR069
 	/* support tr069 notification */	
 	system("/usr/bin/killall -USR2 cwmp > /dev/null 2>&1");	
+#endif
 	return NVRAM_SUCCESS;
-
-_err_out:
-	if (data)
-		free(data);
-	if (fd1 >= 0)
-		close(fd1);
-
-	return err;
 }
 
 int nvram_commit(void)
