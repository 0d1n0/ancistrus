#!/bin/sh

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
#       Copyright (C) 2012-4 Michael D. Taht, Toke Høiland-Jørgensen, Sebastian Moeller
#
# Revised & adapted:
# ancistrus
#
# Netgear's Nighthawk Router Experience Distributed Project
#
# D7000
#
# https://github.com/negan07/ancistrus
#

STATE_FILE=/tmp/qos.state

stop_sqm() {

if [ -z "${SCRIPT}" ] ; then
    sqm_error "SCRIPT value is not defined in qos.conf"
    sqm_error "Please check your configuration and try again."
    exit 1
fi

sqm_trace; sqm_trace "$(date): Stopping." # Add some space and a date stamp to verbose log output and log files to separate runs
sqm_log "Stopping SQM on ${IFACE}"

# make sure to only delete the ifb associated with the current interface
CUR_IFB=$( get_ifb_associated_with_if ${IFACE} )
[ -z "$CUR_IFB" ] && CUR_IFB=$( ifb_name ${IFACE} )

if [ ! -f "./$SCRIPT" ]; then
    sqm_error "SQM script ${SCRIPT} not found!"
    exit 1
fi

. $SCRIPT

sqm_stop

rm -f "${STATE_FILE}"

return 0
}

start_sqm() {

if [ -z "${SCRIPT}" ] ; then
    sqm_error "SCRIPT value is not defined in qos.conf"
    sqm_error "Please check your configuration and try again."
    exit 1
fi

if [ -f "${STATE_FILE}" ]; then
    sqm_error "SQM already activated on ${IFACE}."
    exit 1
fi

# in case of spurious hotplug events, try double check whether the interface is really up
if [ ! -d /sys/class/net/${IFACE} ] ; then
    sqm_error "${IFACE} does currently not exist, not even trying to start SQM on nothing."
    exit 1
fi

if [ "${ENABLED:-1}" -ne "1" ]; then
    sqm_log "SQM config disabled on ${IFACE}."
    exit 0
fi

if [ ! -f "./$SCRIPT" ]; then
    sqm_error "SQM script ${SCRIPT} not found!"
    exit 1
fi

. $SCRIPT

sqm_trace; sqm_trace "$(date): Starting." # Add some space and a date stamp to verbose log output and log files to separate runs
sqm_log "Starting SQM script: ${SCRIPT} on ${IFACE}, in: ${DOWNLINK} Kbps, out: ${UPLINK} Kbps"
sqm_start && write_state_file ${STATE_FILE} && sqm_log "${SCRIPT} was started on ${IFACE} successfully"

return 0
}

show_sqm() {
local INGR=$( ifb_name ${IFACE} )
[ -z "$1" ] || S="-s"

    for I in qdisc class filter
    do
    echo
    echo "---- $I ----"
    echo "--- EGRESS ---"
    $TC_BINARY $S $I show dev ${IFACE}
        [ -z "${INGR}" ] || {
        echo "--- INGRESS ---"
        $TC_BINARY $S $I show dev ${INGR}
        }
    done
echo
echo "--- MANGLE ---"
ipt -t mangle -nL -v

return 0
}

# DEBUG
[ "$2" = "debug" ] && export SQM_DEBUG=1
[ "$3" = "verbose" ] && export SQM_VERBOSITY_MAX=8

. qos.conf
. defaults.sh
. functions.sh

    case $1 in
    start|restart)
    stop_sqm
    [ $ENABLED -eq 1 ] || exit 1
    start_sqm
    ;;
    stop)
    stop_sqm
    ;;
    show)
    show_sqm
    ;;
    stats)
    show_sqm stats
    ;;
    *)
    echo "Usage: $0 start|restart|stop|show|stats (debug) (verbose)"
    exit 1
    ;;
    esac

