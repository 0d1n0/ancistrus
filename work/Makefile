include Download.mak

PROJECT_TARGET		:= D7000
PROJECT_NAME		:= ancistrus

CUR_PATH		:= $(shell pwd)
CUR_REL_PATH		:= $(notdir $(CUR_PATH))
RULES			:= $(CUR_PATH)/Rules.mak
NUMTHREAD		:= $$((2 * `getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1`))
#NUMTHREAD		:= $$((2 * `grep processor /proc/cpuinfo | wc -l`))

ifdef LOCAL
export LOCAL
endif

ifdef DEBUG
export DEBUG
endif

ifndef
SOURCE_DIR_WCNAME	:= *_src
endif

SOURCE_PATH_NAME	:= $(shell cd ../$(SOURCE_DIR_WCNAME); pwd;)
SOURCE_REL_PATH_NAME	:= $(shell echo ../$(SOURCE_DIR_WCNAME))

ifndef PREFIX_NAME
PREFIX_NAME		:= $(PROJECT_NAME)_target
endif

ifndef DEBUG_DIR
DEBUG_DIR		:= /home/ftp
endif

ifneq "$(or $(LOCAL),$(DEBUG))" ""
PREFIX_PATH		:= $(DEBUG_DIR)
else
#PREFIX_PATH		:= $(CUR_PATH)/../$(PREFIX_NAME)
PREFIX_PATH		:= $(SOURCE_PATH_NAME)/Source/target
endif

BUILTINLIB		:=
BUILTIN			:=
THIRDPARTYLIB		:=
THIRDPARTY		:=
SUBDIRS			:=

BUILTINLIB 		+= $(NVRAM)
#THIRDPARTY		+= $(PROJECT_NAME)_core-0.0.0
ifndef LOCAL
BUILTIN			+= $(UTELNETD)
BUILTIN			+= $(IPROUTE2)
BUILTIN			+= $(QOS)
endif

SUBDIRS			+= $(BUILTINLIB)
SUBDIRS			+= $(THIRDPARTYLIB)
SUBDIRS			+= $(BUILTIN)
SUBDIRS			+= $(THIRDPARTY)


all:    creat_rules prepare
	@$(foreach D, $(SUBDIRS), echo -e "\\e[35m$(CUR_REL_PATH): make \\e[36m$D \\e[0m"; \
	$(MAKE) -j$(NUMTHREAD) -C $D || exit 1;)

clean:
	@$(foreach D, $(SUBDIRS), echo -e "\\e[35m$(CUR_REL_PATH): clean \\e[36m$D \\e[0m"; \
	[ ! -d $D ] || $(MAKE) -j$(NUMTHREAD) -C $D clean || exit 1;)

install:
	@$(foreach D, $(SUBDIRS), echo -e "\\e[35m$(CUR_REL_PATH): install \\e[36m$D \\e[0m"; \
	[ ! -d $D ] || $(MAKE) -j$(NUMTHREAD) -C $D install || exit 1;)

creat_rules:
	@echo "# Automatically generated by Makefile: don't edit" > $(RULES)
	@echo "export PROJECT		:= $(PROJECT_TARGET)" >> $(RULES)
	@echo "export GIT_NAME		:= $(PROJECT_NAME)" >> $(RULES)
	@echo "export WORK_DIR		:= $(CUR_PATH)" >> $(RULES)
	@echo "export PREFIX		:= $(PREFIX_PATH)" >> $(RULES)
	@echo "export SOURCE_PATH 	:= $(SOURCE_PATH_NAME)" >> $(RULES)
	@echo "include \$$(WORK_DIR)/env.mak" >> $(RULES)
	@echo "include \$$(SOURCE_PATH)/Source/Builds/\$$(PROJECT).mak" >> $(RULES)

download:
	@$(foreach D, $(SUBDIRS), echo -e "\\e[35m$(CUR_REL_PATH): download & extract \\e[36m$D \\e[0m"; \
	[ -d $D ] || ../dl_sources.sh $D $(DL_$D) $(TAR_$D) || exit 1;)

patch:
	@$(foreach D, $(SUBDIRS), echo -e "\\e[35m$(CUR_REL_PATH): patch \\e[36m$D \\e[0m"; \
	cd ..; [ ! -d $(CUR_REL_PATH)/$(D) ] || [ -f $(CUR_REL_PATH)/$(D)/.patched ] || ./apply_patch.sh $(CUR_REL_PATH) $D || exit 1; \
	cd $(CUR_REL_PATH); [ ! -d $D ] || [ -f $(D)/.patched ] || touch $(D)/.patched;)

prepare: download patch

